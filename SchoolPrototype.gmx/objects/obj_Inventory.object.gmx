<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Bag</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprite Map
SpriteMap = ds_map_create();
SpriteMap[? "Bow" ] = spr_Bow;
SpriteMap[? "Spike" ] = spr_spike;
SpriteMap[? "Bomb" ] = spr_bomb;
SpriteMap[? "Ninja"] = spr_Ninja;
SpriteMap[? "Platemail"] = spr_Platemail;
SpriteMap[? "Wand" ] = spr_Wand;
SpriteMap[? "Shield" ] = spr_Shield;
SpriteMap[? "Agile" ] = spr_SpeedBoost;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inventory list
Inventory = ds_list_create();
global.MyWeapon = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ammo Map
Ammo = ds_map_create();
Ammo[? "Arrows" ] = 10;
Ammo[? "Bombs" ] = 5;
Ammo[? "Spikes" ] = 1; // Arbitrary positive value. They never decrement.
Ammo[? "Mana" ] = 100;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SlideTimer
SlideTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// State
/*
    Closed
    Opened
    Open
    Close
*/
State = "Closed_Start";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Treasure
Treasure = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Selected Weapon
SelectedWeapon = -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mana Tick
alarm[ 0 ] = 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Default Items
ds_list_add( Inventory, obj_Bow, obj_Bomb );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup SpriteMap
ds_map_destroy( SpriteMap );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup Inventory
ds_list_destroy( Inventory );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup Ammo Map
ds_map_destroy( Ammo );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset Alarm
alarm[ 0 ] = 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mana Increase
Ammo[? "Mana" ] += 1;
if( Ammo[? "Mana" ] &gt; 100 )
    Ammo[? "Mana" ] = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Remove duplicate weapon types
ds_list_sort( Inventory, true );
for( var w = 0; w &lt; ds_list_size( Inventory ); ++w )
{
    // If you have a Tier 2 bow, remove any Tier 1 bows
    if( ds_list_find_value( Inventory, w ) == obj_Bow_2 )
    {
        var i = ds_list_find_index( Inventory, obj_Bow );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Bow );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Bow_2 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Bow_2 );
            --w;
        }
    }
    // If you have a Tier 3 bow, remove any Tier 1 or 2 bows
    if( ds_list_find_value( Inventory, w ) == obj_Bow_3 )
    {
        var i = ds_list_find_index( Inventory, obj_Bow_2 );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Bow_2 );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Bow );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Bow );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Bow_3 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Bow_3 );
            --w;
        }
    }
    // If you have a Tier 2 Spike, remove Tier 1s
    if( ds_list_find_value( Inventory, w ) == obj_Spike_2 )
    {
        var i = ds_list_find_index( Inventory, obj_Spike );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Spike );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Spike_2 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Spike_2 );
            --w;
        }
    }
    // If you have a Tier 3 Spike, remove lower tiers
    if( ds_list_find_value( Inventory, w ) == obj_Spike_3 )
    {
        var i = ds_list_find_index( Inventory, obj_Spike_2 );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Spike_2 );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Spike );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Spike );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Spike_3 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Spike_3 );
            --w;
        }
    }
    // If you have a Tier 2 Ninja Armor, remove any Tier 1 Ninja Armors
    if( ds_list_find_value( Inventory, w ) == obj_Ninja_2 )
    {
        var i = ds_list_find_index( Inventory, obj_Ninja );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Ninja );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Ninja_2 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Ninja_2 );
            --w;
        }
    }
    // If you have a Tier 3 Ninja Armor, remove any Tier 1 or 2 Ninja Armors
    if( ds_list_find_value( Inventory, w ) == obj_Ninja_3 )
    {
        var i = ds_list_find_index( Inventory, obj_Ninja_2 );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Ninja_2 );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Ninja );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Ninja );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Ninja_3 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Ninja_3 );
            --w;
        }
    }
    // If you have a Tier 2 Platemail, remove any Tier 1 Platemail
    if( ds_list_find_value( Inventory, w ) == obj_Platemail_2 )
    {
        var i = ds_list_find_index( Inventory, obj_Platemail );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Platemail );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Platemail_2 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Platemail_2 );
            --w;
        }
    }
    // If you have a Tier 3 Platemail, remove any Tier 1 or 2 Platemail
    if( ds_list_find_value( Inventory, w ) == obj_Platemail_3 )
    {
        var i = ds_list_find_index( Inventory, obj_Platemail_2 );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Platemail_2 );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Platemail );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Platemail );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Platemail_3 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Platemail_3 );
            --w;
        }
    }
    // If you have a Tier 2 Shield, remove any Tier 1 Shield
    if( ds_list_find_value( Inventory, w ) == obj_Shield_2 )
    {
        var i = ds_list_find_index( Inventory, obj_Shield );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Shield );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Shield_2 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Shield_2 );
            --w;
        }
    }
    // If you have a Tier 3 Shield, remove any Tier 1 or 2 Shield
    if( ds_list_find_value( Inventory, w ) == obj_Shield_3 )
    {
        var i = ds_list_find_index( Inventory, obj_Shield_2 );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Shield_2 );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Shield );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Shield );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Shield_3 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Shield_3 );
            --w;
        }
    }
    // If you have a Tier 2 Agile Armor, remove any Tier 1 Agile Armor
    if( ds_list_find_value( Inventory, w ) == obj_Agile_2 )
    {
        var i = ds_list_find_index( Inventory, obj_Agile );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Agile );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Agile_2 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Agile_2 );
            --w;
        }
    }
    // If you have a Tier 3 Agile Armor, remove any Tier 1 or 2 Agile Armor
    if( ds_list_find_value( Inventory, w ) == obj_Agile_3 )
    {
        var i = ds_list_find_index( Inventory, obj_Agile_2 );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Agile_2 );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Agile );
        while( i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Agile );
            --w;
        }
        var i = ds_list_find_index( Inventory, obj_Agile_3 );
        while( i != w &amp;&amp; i != -1 )
        {
            ds_list_delete( Inventory, i );
            i = ds_list_find_index( Inventory, obj_Agile_3 );
            --w;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculate Number of Weapons
var WeaponCount = ds_list_size( Inventory );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Open
if( State == "Open_Start" )
{
    State = "Open";
    SlideTimer = 0;
    audio_play_sound( sound_inventory, 2, false );
}
if( State == "Open" )
{
    x = -32 * WeaponCount + 32 * WeaponCount * dsin( SlideTimer );
    if( SlideTimer &lt; 90 )
        SlideTimer += 90 / ( WeaponCount + 5 );
    else
        State = "Opened_Start";
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Opened
if( State == "Opened_Start" )
{
    State = "Opened";
    x = 0;
    y = 0;
}
if( State == "Opened" )
{
    var _mouse_x = device_mouse_x_to_gui( 0 );
    var _mouse_y = device_mouse_y_to_gui( 0 );
    if( mouse_check_button_pressed( mb_left ) )
    {
        if( _mouse_y &gt; y &amp;&amp; _mouse_y &lt; y + 32 )
        {
            if( _mouse_x &gt; x &amp;&amp; _mouse_x &lt; x + 32 )
                State = "Close_Start";
        }
        else if( _mouse_y &gt; y + 32 &amp;&amp; _mouse_y &lt; y + 64 )
        {
            var _index = floor( device_mouse_x_to_gui( 0 ) / 32 );
            if( _index &lt; ds_list_size( Inventory ) )
            {
                global.MyWeapon = Inventory[| _index ];
                SelectedWeapon = _index;
                //State = "Close_Start";
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Close
if( State == "Close_Start" )
{
    State = "Close";
    SlideTimer = 0;
    audio_play_sound( sound_inventory, 2, false );
}
if( State == "Close" )
{
    x = -32 * WeaponCount * dsin( SlideTimer );
    if( SlideTimer &lt; 90 )
        SlideTimer += 5;
    else
        State = "Closed_Start";
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Closed
if( State == "Closed_Start" )
{
    State = "Closed";
    x = 0;
    y = 0;
}
if( State == "Closed" )
{
    var _mouse_x = device_mouse_x_to_gui( 0 );
    var _mouse_y = device_mouse_y_to_gui( 0 );
    if( mouse_check_button_pressed( mb_left ) )
        if( _mouse_x &gt; x &amp;&amp; _mouse_x &lt; x + 32 )
            if( _mouse_y &gt; y &amp;&amp; _mouse_y &lt; y + 32 )
                State = "Open_Start";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make visible again
visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Armor Button
if( room != rm_Lobby )
    instance_create( 0, 0, obj_ArmorButton );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy self
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculate Number of Weapons
var WeaponCount = ds_list_size( Inventory );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw bag
draw_sprite( sprite_index, image_index, 0, 0 );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Open, Opened, Close
if( State == "Open" || State == "Opened" || State == "Close" )
{
    draw_rectangle_colour( x, y + 32, x + 32 * WeaponCount, y + 64, c_yellow, c_orange, c_yellow, c_black, true );
    for( var w = 0; w &lt; WeaponCount; ++w )
    {
        var _x = x + 32 * w + 16;
        var _y = y + 32 + 16;
        if( w == SelectedWeapon )
        {
            draw_set_alpha( 0.5 );
            draw_rectangle_colour( _x - 16, _y - 16, _x + 16, _y + 16, c_green, c_lime, c_gray, c_green, false );
            draw_set_alpha( 1 );
        }
        switch( Inventory[| w ] )
        {
            case obj_Bow:
            case obj_Bow_2:
            case obj_Bow_3:
                if( Ammo[? "Arrows" ] &gt; 0 )
                    draw_sprite_ext( SpriteMap[? "Bow" ], 0, _x, _y, 1, 1, 0, c_white, 1 );
                else
                    draw_sprite_ext( SpriteMap[? "Bow" ], 0, _x, _y, 1, 1, 0, c_red, 1 );
                draw_set_halign( fa_center );
                draw_text( _x, _y, string( Ammo[? "Arrows" ] ) );
                draw_set_halign( fa_left );
                break;
            case obj_Spike:
            case obj_Spike_2:
            case obj_Spike_3:
                draw_sprite_ext( SpriteMap[? "Spike" ], 0, _x, _y, 1, 1, 0, c_white, 1 );
                break;
            case obj_Bomb:
                if( Ammo[? "Bombs" ] &gt; 0 )
                    draw_sprite_ext( SpriteMap[? "Bomb" ], 0, _x, _y, 1, 1, 0, c_white, 1 );
                else
                    draw_sprite_ext( SpriteMap[? "Bomb" ], 0, _x, _y, 1, 1, 0, c_red, 1 );
                draw_set_halign( fa_center );
                draw_text( _x, _y, string( Ammo[? "Bombs" ] ) );
                draw_set_halign( fa_left );
                break;
            case obj_Ninja:
            case obj_Ninja_2:
            case obj_Ninja_3:
                draw_sprite_ext( SpriteMap[? "Ninja" ], 0, _x, _y, 1, 1, 0, c_white, 1 );
                break;
            case obj_Platemail:
            case obj_Platemail_2:
            case obj_Platemail_3:
                draw_sprite_ext( SpriteMap[? "Platemail" ], 0, _x, _y, 1, 1, 0, c_white, 1 );
                break;
            case obj_PoisonWand:
            case obj_PoisonWand_3:
                if( Ammo[? "Mana" ] &gt;= 20 )
                    draw_sprite_ext( SpriteMap[? "Wand" ], 0, _x, _y, 1, 1, 0, c_white, 1 );
                else
                    draw_sprite_ext( SpriteMap[? "Wand" ], 0, _x, _y, 1, 1, 0, c_red, 1 );
                draw_set_halign( fa_center );
                draw_text( _x, _y, string( floor( Ammo[? "Mana" ] / 20 ) ) );
                draw_set_halign( fa_left );
                break;
            case obj_FireWand:
            case obj_FireWand_3:
                if( Ammo[? "Mana" ] &gt;= 10 )
                    draw_sprite_ext( SpriteMap[? "Wand" ], 0, _x, _y, 1, 1, 0, c_white, 1 );
                else
                    draw_sprite_ext( SpriteMap[? "Wand" ], 0, _x, _y, 1, 1, 0, c_red, 1 );
                draw_set_halign( fa_center );
                draw_text( _x, _y, string( floor( Ammo[? "Mana" ] / 10 ) ) );
                draw_set_halign( fa_left );
                break;
            case obj_Shield:
            case obj_Shield_2:
            case obj_Shield_3:
                draw_sprite_ext( SpriteMap[? "Shield" ], 0, _x, _y, 1, 1, 0, c_white, 1 );
                break;
            case obj_Agile:
            case obj_Agile_2:
            case obj_Agile_3:
                draw_sprite_ext( SpriteMap[? "Agile" ], 0, _x, _y, 1, 1, 0, c_white, 1);
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Treasure
draw_sprite( spr_Treasure1, 0, display_get_gui_width() - 32, 16 );
draw_set_halign( fa_right );
draw_text( display_get_gui_width() - 64, 16, string( Treasure ) );
draw_set_halign( fa_left );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Do not draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
