<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Label
Label = "null";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add random weapon
weapons = ds_list_create();
randomize();
var numWeaponTypes = 3;//Update for new weapons. 
var rand = irandom(numWeaponTypes-1);
if(obj_Inventory.Treasure &gt;= 50){
    obj_Inventory.Treasure -= 50;
    switch(rand){
        case 0: 
            ds_list_add(obj_Inventory.Inventory, obj_Bomb);
            Label = "Bought a bomb!";
            break;
        case 1:
            var i;
            for(i = 0; i &lt; ds_list_size(obj_Inventory.Inventory); i++){
                if(ds_list_find_value(obj_Inventory.Inventory, i) == obj_Bow){
                    ds_list_add(obj_Inventory.Inventory, obj_Bow_2);
                    Label = "Bought a tier 2 bow!";
                    break;
                }
                if(ds_list_find_value(obj_Inventory.Inventory, i) == obj_Bow_2 || ds_list_find_value(obj_Inventory.Inventory, i) == obj_Bow_3){
                    ds_list_add(obj_Inventory.Inventory, obj_Bow_3);
                    Label = "Bought a tier 3 bow!";
                    break;
                }
           
            }
            ds_list_add(obj_Inventory.Inventory, obj_Bow);
            Label = "Bought a bow";
            break;
        case 2:
            var i;
            for(i = 0; i &lt; ds_list_size(obj_Inventory.Inventory); i++){
                if(ds_list_find_value(obj_Inventory.Inventory, i) == obj_Spike){
                    ds_list_add(obj_Inventory.Inventory, obj_Spike_2);
                    Label = "Bought a tier 2 spike!";
                    break;
                }
                if(ds_list_find_value(obj_Inventory.Inventory, i) == obj_Spike_2 || ds_list_find_value(obj_Inventory.Inventory, i) == obj_Spike_3){
                    ds_list_add(obj_Inventory.Inventory, obj_Spike_3);
                    Label = "Bought a tier 3 spike!";
                    break;
                }
           
            }
            ds_list_add(obj_Inventory.Inventory, obj_Spike);
            Label = "Bought a spike!";
            break;
        
    }
}
else{
    Label = "Not enough money";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
draw_self();
draw_text(x-20,y+25,Label);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
